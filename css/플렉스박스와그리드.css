.flex_box{
    background-color: lightgray;
    display: flex; /*한줄로들어옴*/
    height: 300px;
}


.item,.item_1{
    width: 50px;
    height: 30px;
    background-color: darkorange;
}


.item_1{
    order: -1;/* 값이 작을수록 앞으로감 order값은 0이기본값  */
    flex: auto;/*auto는 원래너비값이 들어가지만 상대적으로 너비값들어감*/
    align-self: center;/*혼자만 센터로 하나의 요소만 넣어주고싶을때 align-self*/
}

.grid_box{
    display: grid;
    height: 400px;
    background-color: lightgray;
    grid-template-columns: repeat(3, 1fr); /*1fr3번반복 fr사용하면 공간에 맞게 넣어짐 2fr한공간차지하는게 두배됨*/
/* auto-fit,minmax()마지막 auto-fit 밑의 크기 높이 지정하면 안됨 */
}
.grid_box .item {
    width: auto;/*크기지정하면 배열대로 지정가능 크기지정안하면 그공간만큼지정됨너비 고정됨 auto하지 않으면*/
    height: auto;
}

.item_g1{
    /* grid-column-start: 1;첫위치
    grid-column-end: 3;3본째까지 범위지정됨 선1선2선3으로함 */

        grid-row: 1 /span 2;/*1번쨰칸이 밑의 2개의 칸차지*/
        align-self: end;
}

.item_g2{
    grid-column: 2/4;/*2부터4까지 셀영역지정*/
    background-color: darkgreen;
}

.grid_box_layout{
    display: grid;
    grid-template-areas: 
        "header header header"
        "a main b"
        "footer footer footer"
        ;
        /* 이름지정해서 순서대로드들어가있음 */
     /*   grid-auto-flow: column;
 자동으로배치가능 */

}


.item_header{
    grid-area: header;
    background-color: cornflowerblue;
     /*3칸차지  */
}

.item_a{
    grid-area: a;
}
.item_main{
    grid-area: main;
}
.item_b{
    grid-area: b;
}
.item_footer{
    grid-area: footer;
    background-color: cornflowerblue;
}
